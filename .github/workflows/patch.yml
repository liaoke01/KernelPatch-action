name: Patch Workflow

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up environment variables
      run: echo "PATCHVBMETAFLAG=true" >> $GITHUB_ENV
      shell: bash

    - name: Load config variables
      id: config
      run: |
        cat config.env | xargs -n1 | while read line; do
          echo "Setting $line"
          echo "$line" >>$GITHUB_ENV
        done
      shell: bash

    # 获取bmax121/kernelpatch仓库的最新tag标签
    - name: Get latest tag from bmax121/kernelpatch
      id: latest_tag_kernelpatch
      run: |
        # 使用GitHub API获取bmax121/kernelpatch的最新tag
        latest_tag_response=$(curl -s https://api.github.com/repos/bmax121/kernelpatch/tags)
        # 解析JSON响应以获取最新tag
        latest_tag=$(echo "$latest_tag_response" | grep -o '"name":.*' | head -n 1 | cut -d '"' -f 4)
        echo "Latest tag is: $latest_tag"
        # 设置输出变量
        echo "::set-output name=tag::$latest_tag"
      shell: bash

    # 使用获取到的最新tag来设置下载链接
    - name: Set download URLs with latest tag from bmax121/kernelpatch
      run: |
        # 更新kptools-linux的下载链接
        echo "KP_TOOLS_URL=https://github.com/bmax121/KernelPatch/releases/download/${{ steps.latest_tag_kernelpatch.outputs.tag }}/kptools-linux" >>$GITHUB_ENV
        # 更新kpimg-android的下载链接
        echo "KP_IMG_URL=https://github.com/bmax121/KernelPatch/releases/download/${{ steps.latest_tag_kernelpatch.outputs.tag }}/kpimg-android" >>$GITHUB_ENV
      shell: bash

    - name: Download files
      run: |
        wget -O magiskboot $MAGISKBOOT_URL
        wget -O kpimg-android $KP_IMG_URL
        wget -O kptools-linux $KP_TOOLS_URL
        wget -O boot.img $BOOT_URL
        chmod +x magiskboot kptools-linux
        for zip in *.zip; do
          if [ -f "$zip" ]; then
            unzip -o "$zip" -d .
            echo "Extracted $zip to current directory"
          fi
        done
      shell: bash

    - name: Rename files
      run: |
        mv kptools-linux kptools
        mv kpimg-android kpimg
        chmod +x magiskboot kptools
      shell: bash

    - name: Patch commands
      run: |
        ./magiskboot unpack boot.img
        mv kernel kernel.ori
        ./kptools -p -i kernel.ori -k kpimg -s $SKEY -o kernel
        ./magiskboot repack boot.img
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: new-boot.img
        path: new-boot.img
        retention-days: 1
