name: Patch Workflow

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up environment variables
      run: echo "PATCHVBMETAFLAG=true" >> $GITHUB_ENV
           sudo apt-get update && sudo apt-get install -y aria2 tree
    - name: build function
      run: |
         function set_latest_tag() {
         local repo_url=\$1
         local env_var_name=\$2
         local latest_tag_response=$(curl -s https://api.github.com/repos/$repo_url/tags)
         local latest_tag=$(echo "$latest_tag_response" | grep -o '"name":.*' | head -n 1 | cut -d '"' -f 4)
         export $env_var_name="$latest_tag"
         }

         get_latest_tag "bmax121/kernelpatch" "latest_tag"
         
    - name: Checkout
      uses: actions/checkout@v4.1.4

    - name: Setup Python
      uses: actions/setup-python@v5.1.0
      with: 
         python-version: '3.12.3'
      
    - name: Load config variables
      id: config
      run: |
        cat config.env | xargs -n1 | while read line; do
          echo "Setting $line"
          echo "$line" >>$GITHUB_ENV
        done

        
    # 使用获取到的最新tag来设置下载链接
    - name: Set download URLs with latest tag from bmax121/kernelpatch
      run: |
        # 更新kptools-linux的下载链接
        echo "KP_TOOLS_URL=https://github.com/bmax121/KernelPatch/releases/download/${latest_tag}/kptools-linux" >>$GITHUB_ENV
        # 更新kpimg-android的下载链接
        echo "KP_IMG_URL=https://github.com/bmax121/KernelPatch/releases/download/${latest_tag}/kpimg-android" >>$GITHUB_ENV

    - name: Download files
      run: |
        aria2c -o kpimg-android $KP_IMG_URL
        aria2c -o kptools-linux $KP_TOOLS_URL
        
    - name: download boot
      uses: dawidd6/action-download-artifact@v3.1.4
      with:
        repo: liaoke01/BootIMGExtractAction
        workflow_conclusion: success
        workflow: BootIMGExtractAction.yml
        name: boot.img
        path: .
            
    - name: Download magiskboot
      run: |
        wget https://github.com/xiaoxindada/magiskboot_ndk_on_linux/releases/latest/download/magiskboot.7z
        pip install py7zr
        chmod +x 1.py
        python 1.py
        mv out/x86_64/magiskboot .
        tree
    - name: Rename files
      run: |
        mv kptools-linux kptools
        mv kpimg-android kpimg
        chmod +x magiskboot kptools

    - name: Patch commands
      run: |
        ./magiskboot unpack boot.img
        mv kernel kernel.ori
        ./kptools -p -i kernel.ori -k kpimg -s $SKEY -o kernel
        ./magiskboot repack boot.img

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: new-boot.img
        path: new-boot.img
